---
- name: Create HTTP service in IPA
  ipa_service:
    ipa_user: "{{ ipaclient_enroll_user }}"
    ipa_pass: "{{ ipaclient_enroll_pass }}"
    ipa_host: "{{ ipaclient_servers[0] }}"
    krbcanonicalname: HTTP/{{ item }}
    hosts: "{{ ansible_fqdn }}"
    state: present
  with_items:
  - "{{ ansible_fqdn }}"
  register: ipasvc
  no_log: true
  retries: 5
  delay: 2
  until: not ipasvc.failed

- name: Get Admin Keytab
  shell: echo '{{ ipaclient_enroll_pass }}' | kinit {{ ipaclient_enroll_user }}
  no_log: true

- block:
  # ipa host-add san.host.example.test --force
  - name: Create dummy hosts in IPA for additional SANs
    run_once: true
    no_log: true
    ipa_host:
      ipa_host: "{{ ipaclient_servers[0] }}"
      ipa_user: "{{ ipaclient_enroll_user }}"
      ipa_pass: "{{ ipaclient_enroll_pass }}"
      fqdn: "{{ item }}"
      force: true
    with_items:
    - "{{ ipaclient_ssl_subject_altnames }}"
    register: ipahost
    retries: 5
    delay: 2
    until: not ipahost.failed

  # ipa service-add test/san.host.example.test --force
  - name: Create HTTP service in IPA
    run_once: true
    no_log: true
    ipa_service:
      ipa_host: "{{ ipaclient_servers[0] }}"
      ipa_user: "{{ ipaclient_enroll_user }}"
      ipa_pass: "{{ ipaclient_enroll_pass }}"
      krbcanonicalname: HTTP/{{ item }}
      hosts: "{{ ansible_fqdn }}"
      state: present
    register: newsan
    with_items:
    - "{{ ipaclient_ssl_subject_altnames }}"
    retries: 5
    delay: 2
    until: not newsan.failed

  # ipa service-add-host test/san.host.example.test --host `hostname`   (Link service to real host)
  - name: Associate SAN principal to real host
    command: ipa service-add-host HTTP/{{ item }} --host {{ ansible_fqdn }}
    register: sanadd
    with_items:
    - "{{ ipaclient_ssl_subject_altnames }}"
    failed_when:
    - sanadd.rc != 0
    - sanadd.rc != 1
    - '"This entry is already a member" not in sanadd.stdout_lines'
    changed_when:
    - '"Number of members added 1" in sanadd.stdout_lines'
  when: ipaclient_ssl_subject_altnames|length > 0

- name: Ensure SSL cert directories exist
  file:
    path: "{{ ipaclient_ssl_dir }}/{{ item }}"
    state: directory
  with_items:
  - certs
  - private

- name: Check if SSL certs already exist
  stat:
    path: "{{ ipaclient_ssl_dir }}/certs/{{ ansible_fqdn }}.pem"
  register: sslcerts
  changed_when: false

# If we have updated certs we need to clean up and request the updated ones
- block:
  - name: Get existing cert dogtag tracking ID
    command: ipa-getcert list -f {{ ipaclient_ssl_dir }}/certs/{{ ansible_fqdn }}.pem
    register: certlist

  - name: Set Cert ID
    set_fact:
      certid: "{{ certlist.stdout | regex_search(regexp,'\\1') | first }}"
    vars:
      regexp: "Request ID '([^']+)'"

  - name: Stop tracking existing certs
    command: ipa-getcert stop-tracking -i {{ certid }}

  - name: Remove existing certs
    file:
      path: "{{ item }}"
      state: absent
    with_items:
    - "{{ ipaclient_ssl_dir }}/certs/{{ ansible_fqdn }}.pem"
    - "{{ ipaclient_ssl_dir }}/private/{{ ansible_fqdn }}.key"
  when: sslcerts.stat.exists and newsan.changed

- name: Request new SSL certs from IPA
  command: >
    ipa-getcert request -r -g {{ ipaclient_ssl_keylen }}
    -f {{ ipaclient_ssl_dir }}/certs/{{ ansible_fqdn }}.pem
    -k {{ ipaclient_ssl_dir }}/private/{{ ansible_fqdn }}.key
    -N CN={{ ansible_fqdn }}
    -K HTTP/{{ ansible_fqdn }}
    {% for san in ipaclient_ssl_subject_altnames %}
    -D {{ san }}
    {% endfor %}
  when: not sslcerts.stat.exists or newsan.changed

- name: Wait for certs to be retrieved
  wait_for:
    path: "{{ ipaclient_ssl_dir }}/certs/{{ ansible_fqdn }}.pem"
  when: not sslcerts.stat.exists or newsan.changed

- name: Destroy admin keytab
  command: kdestroy

- name: Set permissions on SSL certs
  file:
    path: "{{ item.path }}"
    mode: "{{ item.perms }}"
  with_items:
  - path: "{{ ipaclient_ssl_dir }}/certs/{{ ansible_fqdn }}.pem"
    perms: '0644'
  - path: "{{ ipaclient_ssl_dir }}/private/{{ ansible_fqdn }}.key"
    perms: '{{ ipaclient_ssl_key_mode }}'
