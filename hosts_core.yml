all:
  vars:
    motd_system: Home
    motd_sys_env: Core

    cis_level_1_exclusions: ['1.2.3','1.3.1','1.8','2.2.7','3.4.1','3.4.2','3.4.3','3.4.4','3.4.5','5.2.8','5.3.2']
    cis_level_2_exclusions: ['6.1.1']
      # 1.2.3   - GPG checking
      # 1.3.1   - 'aide --init' on EL8 hangs
      # 1.8     - Yum update *
      # 2.2.7   - Removes ipa-client as a dependency of rpcbind/nfs-utils.
      # 3.4.2-5 - hosts.allow and hosts.deny not configured
      # 5.2.8   - Disable root ssh
      # 5.3.2   - PAM config
      # 6.1.1.  - Audit Sytem File Permissions
    cis_chrony_servers: |+
      server ntp1.core.home.gatwards.org iburst
      server ntp2.core.home.gatwards.org iburst
      server ntp3.core.home.gatwards.org iburst
    cis_ntp_clients: "{{ cis_chrony_servers }}"

    cis_local_login_warning_banner: |+
      ###############################################################
      #  All connections to this system are monitored and recorded  #
      #  Disconnect IMMEDIATELY if you are not an authorized user!  #
      ###############################################################
    cis_remote_login_warning_banner: "{{ cis_local_login_warning_banner }}"

    # Common SSL parameters
    tls_cafile: /etc/pki/ca-trust/source/anchors/GatwardIT-IPA.pem

    # InfluxDB is used by multiple groups, common params defined here
    influxdb_host: influxdb.core.home.gatwards.org

    # MQTT broker is used by multiple groups, common params defined here
    mqtt_broker_fqdn: mqtt.core.home.gatwards.org

    # Location parameters used in multple groups
    latitude: "{{ vault_latitude }}"
    longitude: "{{ vault_longitude }}"
    altitude: '698'


  children:
    docker:
      children:
        docker_nas:
          hosts:
            nas1.core.home.gatwards.org:
              ansible_python_interpreter: /usr/bin/python

    raspberry:
      hosts:
        openhab.core.home.gatwards.org: {}
        rpi-util1.core.home.gatwards.org: {}
        rpi-util2.core.home.gatwards.org:
          ssh_X11Forwarding: 'yes'
#        rpi-util3.core.home.gatwards.org: {}
      vars:
        ansible_python_interpreter: /usr/bin/python3
        prometheus_platform_architecture: linux-armv7
        ssl_dir: /etc/ssl/localcerts
        ca_path: /usr/local/share/ca-certificates

    influxdb:
      hosts:
        influxdb.core.home.gatwards.org:
      vars:
        influxdb_databases:
        - name: 'prometheus'
          retention_policy:
            name: 1week
            duration: 1w
            replication: 1
        - name: 'openhab'
          retention_policy:
            name: 1week
            duration: 1w
            replication: 1

    automation:
      hosts:
        openhab.core.home.gatwards.org:
          rpi_vlans:
          - id: '2'
            address: 172.22.2.2/24
          ipaclient_ssl_subject_altnames:
          - openhab.iot.home.gatwards.org
          - home1.gatwards.org
      vars:
        motd_role: Home Automation Server
        ipaclient_ssl_create_certs: true
        ipaclient_ssl_keylen: '2048'

    foreman:
      hosts:
        foreman.core.home.gatwards.org: {}
      vars:
        motd_role: Provisioning Server
        cis_level_1_exclusions: ['1.2.3','1.1.5','1.3.1','1.8','2.1.1','2.1.2','2.1.3','2.1.4','2.1.5','2.2.7','3.4.1','3.4.2','3.4.3','3.4.4','3.4.5','5.2.8','5.3.2']
        # 1.1.5   - Ensure noexec on /tmp - Foreman puppetserver *REQUIRES* /tmp to be exec
        # 2.1.1-5 - Disable xinetd services - off by default anyway, causes issues if tftp is required
        cis_tftp_install: { package: tftp-server, state: present, exception: 123, service: tftp.socket, enabled: no, rstate: stopped, client: tftp, client_state: absent }
        cis_rsync_install: { package: rsync, state: present, exception: 123, service: rsyncd, enabled: no, rstate: started }
        cis_dhcpd_install: { package: "dhcp", state: present, service: dhcpd, rstate: started, enabled: true, exception: 123 }
        cis_httpd_install: { package: httpd, state: present, service: httpd, rstate: started, enabled: true, exception: 123 }
        # xinetd not required if Foreman TFTP set to use systemd.socket
        cis_xinetd_install: { package: xinetd, state: present, exception: 123, service: xinetd, enabled: true, rstate: started }
        cis_xinetd_state: present

    kvm:
      hosts:
        kvm1.core.home.gatwards.org:
          kvm_imgvol: /dev/mapper/pdc_cgbbjdiaic
          kvm_vlans: ['1','4']
          kvm_virtual_networks:
          - name: Core_VLAN1
            mode: bridge
            bridge_name: vmbr1
            autostart: true
            state: active
          - name: Lab_VLAN4
            mode: bridge
            bridge_name: vmbr4
            autostart: true
            state: active
      vars:
        motd_role: KVM Host
        cis_level_1_exclusions: ['1.2.3','1.3.1','1.8','2.2.2','2.2.7','3.4.1','3.4.2','3.4.3','3.4.4','3.4.5','5.2.4','5.2.8','5.3.2']
        # 2.2.2 - X11 required for virt-manager
        # 5.2.4 - X11 Forwarding enabled for virt-manager
        ipaclient_ssl_create_certs: true
        kvm_users:
        - geoff


    # grafana:
    #   hosts:
    #     prometheus.core.home.gatwards.org:
    #       instance_ip: 172.22.1.69
    #   vars:
    #     motd_role: Grafana
    #     ipaclient_ssl_create_certs: true
    #     ipaclient_ssl_key_mode: '0644'

    #     grafana_datasources:
    #     - access: proxy
    #       database: prometheus
    #       editable: true
    #       isDefault: true
    #       name: Prometheus
    #       type: influxdb
    #       url: https://{{ hostvars[groups['influxdb'][0]].inventory_hostname }}:{{ hostvars[groups['influxdb'][0]].influxdb_http_port }}
    #       user: grafana_prometheus
    #       secureJsonData:
    #         password: '{{ vault_influxdb_grafana_password }}'
    #       basicAuth: true
    #       basicAuthUser: grafana_prometheus
    #       basicAuthPassword: "{{ vault_influxdb_grafana_password }}"
    #       withCredentials: true
    #     - access: proxy
    #       database: openhab
    #       editable: true
    #       isDefault: false
    #       name: OpenHAB
    #       type: influxdb
    #       url: https://{{ hostvars[groups['influxdb'][0]].inventory_hostname }}:{{ hostvars[groups['influxdb'][0]].influxdb_http_port }}
    #       user: grafana_openhab
    #       secureJsonData:
    #         password: '{{ vault_influxdb_grafana_password }}'
    #       basicAuth: true
    #       basicAuthUser: grafana_openhab
    #       basicAuthPassword: "{{ vault_influxdb_grafana_password }}"
    #       withCredentials: true


        # grafana_auth:
        #   anonymous:
        #     org_name: Main Organization
        #     org_role: Viewer
        #   basic:
        #     enabled: true
        #   disable_login_form: false
        #   disable_signout_menu: false
        #   ldap:
        #     allow_sign_up: false
        #     config_file: /etc/grafana/ldap.toml
        #   oauth_auto_login: false
        #   signout_redirect_url: ''



    #       grafana_ldap:
    #         group_mappings:
    #         - groups:
    #           - group_dn: cn=grafana-admins,cn=groups,cn=accounts,dc=grafana,dc=org
    #             org_role: Admin
    #           - group_dn: cn=grafana-editors,cn=groups,cn=accounts,dc=grafana,dc=org
    #             org_role: Editor
    #           - group_dn: '*'
    #             org_role: Viewer
    #           id: 1
    #           name: Main Org.
    #         servers:
    #           attributes:
    #             email: mail
    #             member_of: memberOf
    #             name: givenName
    #             surname: sn
    #             username: uid
    #           bind_dn: uid=svc-grafana,cn=users,cn=accounts,dc=gatwards,dc=org
    #           bind_password: grafana
    #           group_search_base_dns:
    #           - '{{ ldap_group_base }}'
    #           group_search_filter: '{{ ldap_group_filter }}'
    #           host: '{{ ldap_servers[0] }}'
    #           port: 389
    #           root_ca_cert: '{{ tls_cafile }}'
    #           search_base_dns:
    #           - '{{ ldap_user_base }}'
    #           search_filter: '{{ ldap_user_filter }}'
    #           ssl_skip_verify: true
    #           start_tls: true
    #           use_ssl: false
    #         verbose_logging: false


    workstation:
      hosts:
        desktop-01.core.home.gatwards.org:
          desktop_group: "Cinnamon Desktop"
          install_development: true
          install_playonlinux: true
          install_spotify: true
          disable_squashfs: false
        desktop-03.core.home.gatwards.org:
          desktop_group: "Cinnamon Desktop"
          has_wifi: true
          install_playonlinux: true
          install_spotify: true
          disable_squashfs: false
        desktop-04.core.home.gatwards.org:
          desktop_group: "Cinnamon Desktop"
          #has_wifi: true
          install_playonlinux: true
          install_spotify: true
          disable_squashfs: false
        jumphost.lab.home.gatwards.org:
          motd_role: External Jump Box
          #ssh_PermitRootLogin: 'no'
          setup_automounts: false
          configure_printer: false
          install_chrome: false
          install_xrdp: true
          additional_ws_packages: []
        sandbox-xxx.lab.home.gatwards.org:
          desktop_group: "Cinnamon Desktop"
      vars:
        motd_role: Workstation
        setup_automounts: true
        configure_printer: true
        install_chrome: true
        install_xrdp: true
        install_playonlinux: false
        install_spotify: false
        #desktop_group: "Cinnamon Desktop"
        browser_startup_url: 'https://google.com.au'
        install_development: false
        additional_ws_packages:
        - vlc


