---
# Enable SSH on SD card before initial boot:
# touch /boot/ssh

# Boot on network - find IP via MAC lease in DHCP
# Configure in DNS, add to inventory

# Run play as user 'pi' - prompt for password (pi has passwordless sudo)

- name: Raspberry Pi Bootstrap
  remote_user: pi
  become: true
  gather_facts: false
  hosts: raspberry

  tasks:
  - name: Set keyboard language
    lineinfile:
      path: /etc/default/keyboard
      regexp: "XKBLAYOUT="
      line: 'XKBLAYOUT="us"'
    register: keyboard

  - name: Get hostname
    command: raspi-config nonint get_hostname
    register: rpi_hostname
    changed_when: false

  - name: Set hostname
    command: raspi-config nonint do_hostname {{ inventory_hostname }}
    register: pi_hostname
    when: inventory_hostname not in rpi_hostname.stdout_lines

  - name: Set timezone
    command: timedatectl set-timezone Australia/Sydney

  - name: Create Ansible account
    user:
      name: svc-ansible
      state: present

  - name: Create SSH directory
    file:
      path: /home/svc-ansible/.ssh
      state: directory
      owner: svc-ansible
      group: svc-ansible
      mode: '0700'

  - name: Deploy Ansible account SSH key
    copy:
      content: |
        ssh-rsa AAAAB3NzaC1yc2EAAAADAQABAAABgQC75ApOJW1sf360AYmh9B57suv+etPYYa6CzvEJjCVZyU+8xPaZR5EacToq9HPYILNAv3TQk1r+K6DKA5+wEpJqm2YzgIPLkZOP1N4Bw19DnAiqIMnDTYa8iIYHOQMpqG/DY6q1/QnP2Gw6r0uTw7zFKH1Vw4DbVJMGOQBJblWFq1G+LSN4j60eiN72kZEMf3fQgLCKUzDdbOUkjJnl/4/SUq5lncMBm88efiJLNwdJzelGkH5QveNioiQ/mXP/DlnLYiCKHh1qJlaD/OGlEuHJSnDD9uD4TknEi8AFqLTDc4XZZgUWF5RWSUwxMIiBuyMtr5Zma20dQpdwqYZT6LcNcMokHHAQ+S/cuibtR/YQ3PsYubUIAbCfeIHjKRdBDUP5ZE/VfybKTE/rlAUQCzpt5w5iBWr3qo2iW7gW/Rvlt78bqCHETnCNHLIT5mm9koA0+kr2dNmiUnb91KpdpNs4tLveVYGtN8tJHL4NDSHqiEeOYklV+uLL2gN6kziB53c=
      dest: /home/svc-ansible/.ssh/authorized_keys
      owner: svc-ansible
      group: svc-ansible
      mode: '0644'

  - name: Configure Ansible account sudo
    copy:
      content: "svc-ansible ALL=(ALL) NOPASSWD: ALL"
      dest: /etc/sudoers.d/ansible
      owner: root
      group: root
      mode: '0440'

  - name: Check rootfs
    shell: /sbin/parted /dev/mmcblk0 unit gb print free | grep 'Free Space' | tail -n1 | awk '{print $3}'
    register: root_fs
    changed_when: false

  - name: Expand rootfs
    command: raspi-config nonint do_expand_rootfs
    register: rootfs
    when: root_fs.stdout != "0.00GB"

  - name: Install base packages we expect
    package:
      name: "{{ packages }}"
      state: present
    vars:
      packages:
      - firewalld

  - block:
    - name: Install VLAN support
      package:
        name: vlan
        state: present

    - name: Enable VLAN modules
      lineinfile:
        path: /etc/modules
        regexp: '^8021q'
        line: '8021q'

    - name: Add VLAN interface
      copy:
        content: |
          auto eth0.{{ item.id }}
          iface eth0.{{ item.id }} inet static
            vlan-raw-device eth0
        dest: /etc/network/interfaces.d/vlan-{{ item.id }}.conf
      with_items: "{{ rpi_vlans }}"

    - name: Add VLAN interface to dhcpcd.conf
      blockinfile:
        path: /etc/dhcpcd.conf
        block: |
          interface eth0.{{ item.id }}
          static ip_address={{ item.address }}
      with_items: "{{ rpi_vlans }}"
    when: rpi_vlans is defined and rpi_vlans|length > 0

# TODO:
# Add to /etc/rc.local (before exit 0) to ensure VLAN comes up:
# /sbin/vconfig add eth0 {{ item.id }}

  - name: Reboot
    reboot:
    when: keyboard.changed or pi_hostname.changed
